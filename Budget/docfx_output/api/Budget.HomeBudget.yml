### YamlMime:ManagedReference
items:
- uid: Budget.HomeBudget
  commentId: T:Budget.HomeBudget
  id: HomeBudget
  parent: Budget
  children:
  - Budget.HomeBudget.#ctor(System.String,System.Boolean)
  - Budget.HomeBudget.categories
  - Budget.HomeBudget.DatabaseService
  - Budget.HomeBudget.Dispose
  - Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  - Budget.HomeBudget.GetBudgetItems(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  - Budget.HomeBudget.GetBudgetItemsByCategory(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  - Budget.HomeBudget.GetBudgetItemsByMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  - Budget.HomeBudget.transactions
  langs:
  - csharp
  - vb
  name: HomeBudget
  nameWithType: HomeBudget
  fullName: Budget.HomeBudget
  type: Class
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: HomeBudget
    path: HomeBudget.cs
    startLine: 19
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: 'public class HomeBudget : IDisposable'
    content.vb: >-
      Public Class HomeBudget
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Budget.HomeBudget.categories
  commentId: P:Budget.HomeBudget.categories
  id: categories
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: categories
  nameWithType: HomeBudget.categories
  fullName: Budget.HomeBudget.categories
  type: Property
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: categories
    path: HomeBudget.cs
    startLine: 29
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public Categories categories { get; }
    parameters: []
    return:
      type: Budget.Services.Categories
    content.vb: Public ReadOnly Property categories As Categories
  overload: Budget.HomeBudget.categories*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Budget.HomeBudget.transactions
  commentId: P:Budget.HomeBudget.transactions
  id: transactions
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: transactions
  nameWithType: HomeBudget.transactions
  fullName: Budget.HomeBudget.transactions
  type: Property
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: transactions
    path: HomeBudget.cs
    startLine: 30
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public Transactions transactions { get; }
    parameters: []
    return:
      type: Budget.Services.Transactions
    content.vb: Public ReadOnly Property transactions As Transactions
  overload: Budget.HomeBudget.transactions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Budget.HomeBudget.DatabaseService
  commentId: P:Budget.HomeBudget.DatabaseService
  id: DatabaseService
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: DatabaseService
  nameWithType: HomeBudget.DatabaseService
  fullName: Budget.HomeBudget.DatabaseService
  type: Property
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: DatabaseService
    path: HomeBudget.cs
    startLine: 31
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public DatabaseService DatabaseService { get; }
    parameters: []
    return:
      type: Budget.Services.DatabaseService
    content.vb: Public ReadOnly Property DatabaseService As DatabaseService
  overload: Budget.HomeBudget.DatabaseService*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Budget.HomeBudget.#ctor(System.String,System.Boolean)
  commentId: M:Budget.HomeBudget.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: HomeBudget(String, Boolean)
  nameWithType: HomeBudget.HomeBudget(String, Boolean)
  fullName: Budget.HomeBudget.HomeBudget(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: .ctor
    path: HomeBudget.cs
    startLine: 35
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public HomeBudget(string DatabasePath, bool isNewDB = false)
    parameters:
    - id: DatabasePath
      type: System.String
    - id: isNewDB
      type: System.Boolean
    content.vb: Public Sub New(DatabasePath As String, isNewDB As Boolean = False)
  overload: Budget.HomeBudget.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Budget.HomeBudget.GetBudgetItems(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  commentId: M:Budget.HomeBudget.GetBudgetItems(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  id: GetBudgetItems(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: GetBudgetItems(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  nameWithType: HomeBudget.GetBudgetItems(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  fullName: Budget.HomeBudget.GetBudgetItems(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: GetBudgetItems
    path: HomeBudget.cs
    startLine: 65
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public List<BudgetItem> GetBudgetItems(DateTime? Start, DateTime? End, bool FilterFlag, int CategoryID)
    parameters:
    - id: Start
      type: System.Nullable{System.DateTime}
    - id: End
      type: System.Nullable{System.DateTime}
    - id: FilterFlag
      type: System.Boolean
    - id: CategoryID
      type: System.Int32
    return:
      type: System.Collections.Generic.List{Budget.Models.BudgetItem}
    content.vb: Public Function GetBudgetItems(Start As Date?, End As Date?, FilterFlag As Boolean, CategoryID As Integer) As List(Of BudgetItem)
  overload: Budget.HomeBudget.GetBudgetItems*
  nameWithType.vb: HomeBudget.GetBudgetItems(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Budget.HomeBudget.GetBudgetItems(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Boolean, System.Int32)
  name.vb: GetBudgetItems(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
- uid: Budget.HomeBudget.GetBudgetItemsByMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  commentId: M:Budget.HomeBudget.GetBudgetItemsByMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  id: GetBudgetItemsByMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: GetBudgetItemsByMonth(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  nameWithType: HomeBudget.GetBudgetItemsByMonth(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  fullName: Budget.HomeBudget.GetBudgetItemsByMonth(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: GetBudgetItemsByMonth
    path: HomeBudget.cs
    startLine: 127
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public List<BudgetItemsByMonth> GetBudgetItemsByMonth(DateTime? Start, DateTime? End, bool FilterFlag, int CategoryID)
    parameters:
    - id: Start
      type: System.Nullable{System.DateTime}
    - id: End
      type: System.Nullable{System.DateTime}
    - id: FilterFlag
      type: System.Boolean
    - id: CategoryID
      type: System.Int32
    return:
      type: System.Collections.Generic.List{Budget.Models.BudgetItemsByMonth}
    content.vb: Public Function GetBudgetItemsByMonth(Start As Date?, End As Date?, FilterFlag As Boolean, CategoryID As Integer) As List(Of BudgetItemsByMonth)
  overload: Budget.HomeBudget.GetBudgetItemsByMonth*
  nameWithType.vb: HomeBudget.GetBudgetItemsByMonth(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Budget.HomeBudget.GetBudgetItemsByMonth(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Boolean, System.Int32)
  name.vb: GetBudgetItemsByMonth(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
- uid: Budget.HomeBudget.GetBudgetItemsByCategory(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  commentId: M:Budget.HomeBudget.GetBudgetItemsByCategory(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  id: GetBudgetItemsByCategory(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: GetBudgetItemsByCategory(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  nameWithType: HomeBudget.GetBudgetItemsByCategory(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  fullName: Budget.HomeBudget.GetBudgetItemsByCategory(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: GetBudgetItemsByCategory
    path: HomeBudget.cs
    startLine: 155
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public List<BudgetItemsByCategory> GetBudgetItemsByCategory(DateTime? Start, DateTime? End, bool FilterFlag, int CategoryID)
    parameters:
    - id: Start
      type: System.Nullable{System.DateTime}
    - id: End
      type: System.Nullable{System.DateTime}
    - id: FilterFlag
      type: System.Boolean
    - id: CategoryID
      type: System.Int32
    return:
      type: System.Collections.Generic.List{Budget.Models.BudgetItemsByCategory}
    content.vb: Public Function GetBudgetItemsByCategory(Start As Date?, End As Date?, FilterFlag As Boolean, CategoryID As Integer) As List(Of BudgetItemsByCategory)
  overload: Budget.HomeBudget.GetBudgetItemsByCategory*
  nameWithType.vb: HomeBudget.GetBudgetItemsByCategory(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Budget.HomeBudget.GetBudgetItemsByCategory(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Boolean, System.Int32)
  name.vb: GetBudgetItemsByCategory(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
- uid: Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  commentId: M:Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  id: GetBudgetDictionaryByCategoryAndMonth(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Int32)
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: GetBudgetDictionaryByCategoryAndMonth(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  nameWithType: HomeBudget.GetBudgetDictionaryByCategoryAndMonth(Nullable<DateTime>, Nullable<DateTime>, Boolean, Int32)
  fullName: Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth(System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: GetBudgetDictionaryByCategoryAndMonth
    path: HomeBudget.cs
    startLine: 186
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public List<Dictionary<string, object>> GetBudgetDictionaryByCategoryAndMonth(DateTime? Start, DateTime? End, bool FilterFlag, int CategoryID)
    parameters:
    - id: Start
      type: System.Nullable{System.DateTime}
    - id: End
      type: System.Nullable{System.DateTime}
    - id: FilterFlag
      type: System.Boolean
    - id: CategoryID
      type: System.Int32
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
    content.vb: Public Function GetBudgetDictionaryByCategoryAndMonth(Start As Date?, End As Date?, FilterFlag As Boolean, CategoryID As Integer) As List(Of Dictionary(Of String, Object))
  overload: Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth*
  nameWithType.vb: HomeBudget.GetBudgetDictionaryByCategoryAndMonth(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth(System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Boolean, System.Int32)
  name.vb: GetBudgetDictionaryByCategoryAndMonth(Nullable(Of DateTime), Nullable(Of DateTime), Boolean, Int32)
- uid: Budget.HomeBudget.Dispose
  commentId: M:Budget.HomeBudget.Dispose
  id: Dispose
  parent: Budget.HomeBudget
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HomeBudget.Dispose()
  fullName: Budget.HomeBudget.Dispose()
  type: Method
  source:
    remote:
      path: Budget/HomeBudget.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: Dispose
    path: HomeBudget.cs
    startLine: 247
  assemblies:
  - Budget
  namespace: Budget
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Budget.HomeBudget.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Budget
  commentId: N:Budget
  name: Budget
  nameWithType: Budget
  fullName: Budget
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Budget.HomeBudget.categories*
  commentId: Overload:Budget.HomeBudget.categories
  name: categories
  nameWithType: HomeBudget.categories
  fullName: Budget.HomeBudget.categories
- uid: Budget.Services.Categories
  commentId: T:Budget.Services.Categories
  parent: Budget.Services
  name: Categories
  nameWithType: Categories
  fullName: Budget.Services.Categories
- uid: Budget.Services
  commentId: N:Budget.Services
  name: Budget.Services
  nameWithType: Budget.Services
  fullName: Budget.Services
- uid: Budget.HomeBudget.transactions*
  commentId: Overload:Budget.HomeBudget.transactions
  name: transactions
  nameWithType: HomeBudget.transactions
  fullName: Budget.HomeBudget.transactions
- uid: Budget.Services.Transactions
  commentId: T:Budget.Services.Transactions
  parent: Budget.Services
  name: Transactions
  nameWithType: Transactions
  fullName: Budget.Services.Transactions
- uid: Budget.HomeBudget.DatabaseService*
  commentId: Overload:Budget.HomeBudget.DatabaseService
  name: DatabaseService
  nameWithType: HomeBudget.DatabaseService
  fullName: Budget.HomeBudget.DatabaseService
- uid: Budget.Services.DatabaseService
  commentId: T:Budget.Services.DatabaseService
  parent: Budget.Services
  name: DatabaseService
  nameWithType: DatabaseService
  fullName: Budget.Services.DatabaseService
- uid: Budget.HomeBudget.#ctor*
  commentId: Overload:Budget.HomeBudget.#ctor
  name: HomeBudget
  nameWithType: HomeBudget.HomeBudget
  fullName: Budget.HomeBudget.HomeBudget
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Budget.HomeBudget.GetBudgetItems*
  commentId: Overload:Budget.HomeBudget.GetBudgetItems
  name: GetBudgetItems
  nameWithType: HomeBudget.GetBudgetItems
  fullName: Budget.HomeBudget.GetBudgetItems
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{Budget.Models.BudgetItem}
  commentId: T:System.Collections.Generic.List{Budget.Models.BudgetItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BudgetItem>
  nameWithType: List<BudgetItem>
  fullName: System.Collections.Generic.List<Budget.Models.BudgetItem>
  nameWithType.vb: List(Of BudgetItem)
  fullName.vb: System.Collections.Generic.List(Of Budget.Models.BudgetItem)
  name.vb: List(Of BudgetItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Budget.Models.BudgetItem
    name: BudgetItem
    nameWithType: BudgetItem
    fullName: Budget.Models.BudgetItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Budget.Models.BudgetItem
    name: BudgetItem
    nameWithType: BudgetItem
    fullName: Budget.Models.BudgetItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Budget.HomeBudget.GetBudgetItemsByMonth*
  commentId: Overload:Budget.HomeBudget.GetBudgetItemsByMonth
  name: GetBudgetItemsByMonth
  nameWithType: HomeBudget.GetBudgetItemsByMonth
  fullName: Budget.HomeBudget.GetBudgetItemsByMonth
- uid: System.Collections.Generic.List{Budget.Models.BudgetItemsByMonth}
  commentId: T:System.Collections.Generic.List{Budget.Models.BudgetItemsByMonth}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BudgetItemsByMonth>
  nameWithType: List<BudgetItemsByMonth>
  fullName: System.Collections.Generic.List<Budget.Models.BudgetItemsByMonth>
  nameWithType.vb: List(Of BudgetItemsByMonth)
  fullName.vb: System.Collections.Generic.List(Of Budget.Models.BudgetItemsByMonth)
  name.vb: List(Of BudgetItemsByMonth)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Budget.Models.BudgetItemsByMonth
    name: BudgetItemsByMonth
    nameWithType: BudgetItemsByMonth
    fullName: Budget.Models.BudgetItemsByMonth
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Budget.Models.BudgetItemsByMonth
    name: BudgetItemsByMonth
    nameWithType: BudgetItemsByMonth
    fullName: Budget.Models.BudgetItemsByMonth
  - name: )
    nameWithType: )
    fullName: )
- uid: Budget.HomeBudget.GetBudgetItemsByCategory*
  commentId: Overload:Budget.HomeBudget.GetBudgetItemsByCategory
  name: GetBudgetItemsByCategory
  nameWithType: HomeBudget.GetBudgetItemsByCategory
  fullName: Budget.HomeBudget.GetBudgetItemsByCategory
- uid: System.Collections.Generic.List{Budget.Models.BudgetItemsByCategory}
  commentId: T:System.Collections.Generic.List{Budget.Models.BudgetItemsByCategory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BudgetItemsByCategory>
  nameWithType: List<BudgetItemsByCategory>
  fullName: System.Collections.Generic.List<Budget.Models.BudgetItemsByCategory>
  nameWithType.vb: List(Of BudgetItemsByCategory)
  fullName.vb: System.Collections.Generic.List(Of Budget.Models.BudgetItemsByCategory)
  name.vb: List(Of BudgetItemsByCategory)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Budget.Models.BudgetItemsByCategory
    name: BudgetItemsByCategory
    nameWithType: BudgetItemsByCategory
    fullName: Budget.Models.BudgetItemsByCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Budget.Models.BudgetItemsByCategory
    name: BudgetItemsByCategory
    nameWithType: BudgetItemsByCategory
    fullName: Budget.Models.BudgetItemsByCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth*
  commentId: Overload:Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth
  name: GetBudgetDictionaryByCategoryAndMonth
  nameWithType: HomeBudget.GetBudgetDictionaryByCategoryAndMonth
  fullName: Budget.HomeBudget.GetBudgetDictionaryByCategoryAndMonth
- uid: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Dictionary<String, Object>>
  nameWithType: List<Dictionary<String, Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: List(Of Dictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: List(Of Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Budget.HomeBudget.Dispose*
  commentId: Overload:Budget.HomeBudget.Dispose
  name: Dispose
  nameWithType: HomeBudget.Dispose
  fullName: Budget.HomeBudget.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
