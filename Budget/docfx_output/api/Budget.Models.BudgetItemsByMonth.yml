### YamlMime:ManagedReference
items:
- uid: Budget.Models.BudgetItemsByMonth
  commentId: T:Budget.Models.BudgetItemsByMonth
  id: BudgetItemsByMonth
  parent: Budget.Models
  children:
  - Budget.Models.BudgetItemsByMonth.Details
  - Budget.Models.BudgetItemsByMonth.Month
  - Budget.Models.BudgetItemsByMonth.Total
  langs:
  - csharp
  - vb
  name: BudgetItemsByMonth
  nameWithType: BudgetItemsByMonth
  fullName: Budget.Models.BudgetItemsByMonth
  type: Class
  source:
    remote:
      path: Budget/Models/BudgetItem.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: BudgetItemsByMonth
    path: Models/BudgetItem.cs
    startLine: 408
  assemblies:
  - Budget
  namespace: Budget.Models
  summary: "\nRepresents a collection of budget items grouped by month with summary totals.\nThis class organizes financial data by month for period-based reporting and analysis.\n"
  remarks: "\n<p>\n<xref href=\"Budget.Models.BudgetItemsByMonth\" data-throw-if-not-resolved=\"false\"></xref> serves as a container for monthly financial summaries, \ncombining individual transaction details with calculated monthly totals. This structure \nis ideal for generating monthly reports, cash flow analysis, and period-over-period comparisons.\n</p>\n<p>\nThe class follows a master-detail pattern where the <xref href=\"Budget.Models.BudgetItemsByMonth.Total\" data-throw-if-not-resolved=\"false\"></xref> represents the \naggregate calculation and <xref href=\"Budget.Models.BudgetItemsByMonth.Details\" data-throw-if-not-resolved=\"false\"></xref> contains the individual transactions \nthat comprise that total.\n</p>\n<p>\nMonth identification typically uses the &quot;YYYY/MM&quot; format for consistency and proper \nchronological sorting across different years and months.\n</p>\n<p>\nThread Safety: This class is not thread-safe. External synchronization is required for \nconcurrent access from multiple threads.\n</p>\n"
  example:
  - "\n<pre><code>// Create monthly budget summary\nvar januaryBudget = new BudgetItemsByMonth\n{\n    Month = &quot;2025/01&quot;,\n    Details = new List&lt;BudgetItem>\n    {\n        new BudgetItem { Amount = 3000.00m, Category = &quot;Salary&quot;, ShortDescription = &quot;Paycheck&quot; },\n        new BudgetItem { Amount = -1200.00m, Category = &quot;Housing&quot;, ShortDescription = &quot;Rent&quot; },\n        new BudgetItem { Amount = -300.00m, Category = &quot;Food&quot;, ShortDescription = &quot;Groceries&quot; }\n    },\n    Total = 1500.00m  // Net total for the month\n};\n\n// Generate monthly report\nConsole.WriteLine($&quot;Month: {januaryBudget.Month}&quot;);\nConsole.WriteLine($&quot;Transactions: {januaryBudget.Details?.Count ?? 0}&quot;);\nConsole.WriteLine($&quot;Net Total: {januaryBudget.Total:C}&quot;);\nConsole.WriteLine(&quot;Details:&quot;);\n\nif (januaryBudget.Details != null)\n{\n    foreach (var item in januaryBudget.Details)\n    {\n        Console.WriteLine($&quot;  {item.Category}: {item.Amount:C}&quot;);\n    }\n}\n\n// Compare multiple months\nvar monthlyBudgets = new List&lt;BudgetItemsByMonth> { januaryBudget, /* ... other months */ };\nvar averageMonthlyTotal = monthlyBudgets.Average(m => m.Total);\nvar bestMonth = monthlyBudgets.OrderByDescending(m => m.Total).First();</code></pre>\n"
  syntax:
    content: public class BudgetItemsByMonth
    content.vb: Public Class BudgetItemsByMonth
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Budget.Models.BudgetItemsByMonth.Month
  commentId: P:Budget.Models.BudgetItemsByMonth.Month
  id: Month
  parent: Budget.Models.BudgetItemsByMonth
  langs:
  - csharp
  - vb
  name: Month
  nameWithType: BudgetItemsByMonth.Month
  fullName: Budget.Models.BudgetItemsByMonth.Month
  type: Property
  source:
    remote:
      path: Budget/Models/BudgetItem.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: Month
    path: Models/BudgetItem.cs
    startLine: 450
  assemblies:
  - Budget
  namespace: Budget.Models
  summary: "\nGets or sets the month identifier for this budget summary.\n"
  remarks: "\n<p>\nThe month identifier serves as both a display label and a sorting key for chronological \norganization of monthly budget data. The &quot;YYYY/MM&quot; format is recommended because it \nsorts correctly in both alphabetical and chronological order.\n</p>\n<p>\nThis property is used for grouping transactions by month and for generating \ntime-series reports that show financial trends over multiple months.\n</p>\n"
  example:
  - "\n<pre><code>var monthlyBudget = new BudgetItemsByMonth \n{ \n    Month = &quot;2025/01&quot;  // January 2025\n};\n\n// Sort multiple months chronologically\nvar sortedMonths = monthlyBudgets.OrderBy(m => m.Month);\n\n// Extract year and month for analysis\nif (monthlyBudget.Month != null)\n{\n    var parts = monthlyBudget.Month.Split(&apos;/&apos;);\n    var year = int.Parse(parts[0]);   // 2025\n    var month = int.Parse(parts[1]);  // 1 (January)\n}\n\n// Display user-friendly month names\nvar displayName = monthlyBudget.Month == &quot;2025/01&quot; ? &quot;January 2025&quot; : monthlyBudget.Month;</code></pre>\n"
  syntax:
    content: public string Month { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the month in &quot;YYYY/MM&quot; format (e.g., &quot;2025/01&quot; for January 2025), \nor <code>null</code> if not specified. This format ensures proper chronological sorting.\n"
    content.vb: Public Property Month As String
  overload: Budget.Models.BudgetItemsByMonth.Month*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Budget.Models.BudgetItemsByMonth.Details
  commentId: P:Budget.Models.BudgetItemsByMonth.Details
  id: Details
  parent: Budget.Models.BudgetItemsByMonth
  langs:
  - csharp
  - vb
  name: Details
  nameWithType: BudgetItemsByMonth.Details
  fullName: Budget.Models.BudgetItemsByMonth.Details
  type: Property
  source:
    remote:
      path: Budget/Models/BudgetItem.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: Details
    path: Models/BudgetItem.cs
    startLine: 513
  assemblies:
  - Budget
  namespace: Budget.Models
  syntax:
    content: public List<BudgetItem> Details { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Budget.Models.BudgetItem}
    content.vb: Public Property Details As List(Of BudgetItem)
  overload: Budget.Models.BudgetItemsByMonth.Details*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Budget.Models.BudgetItemsByMonth.Total
  commentId: P:Budget.Models.BudgetItemsByMonth.Total
  id: Total
  parent: Budget.Models.BudgetItemsByMonth
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: BudgetItemsByMonth.Total
  fullName: Budget.Models.BudgetItemsByMonth.Total
  type: Property
  source:
    remote:
      path: Budget/Models/BudgetItem.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: Total
    path: Models/BudgetItem.cs
    startLine: 573
  assemblies:
  - Budget
  namespace: Budget.Models
  syntax:
    content: public decimal Total { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Total As Decimal
  overload: Budget.Models.BudgetItemsByMonth.Total*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Budget.Models.BudgetItemsByMonth
  commentId: T:Budget.Models.BudgetItemsByMonth
  name: BudgetItemsByMonth
  nameWithType: BudgetItemsByMonth
  fullName: Budget.Models.BudgetItemsByMonth
- uid: Budget.Models.BudgetItemsByMonth.Total
  commentId: P:Budget.Models.BudgetItemsByMonth.Total
  isExternal: true
- uid: Budget.Models.BudgetItemsByMonth.Details
  commentId: P:Budget.Models.BudgetItemsByMonth.Details
  isExternal: true
- uid: Budget.Models
  commentId: N:Budget.Models
  name: Budget.Models
  nameWithType: Budget.Models
  fullName: Budget.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Budget.Models.BudgetItemsByMonth.Month*
  commentId: Overload:Budget.Models.BudgetItemsByMonth.Month
  name: Month
  nameWithType: BudgetItemsByMonth.Month
  fullName: Budget.Models.BudgetItemsByMonth.Month
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Budget.Models.BudgetItemsByMonth.Details*
  commentId: Overload:Budget.Models.BudgetItemsByMonth.Details
  name: Details
  nameWithType: BudgetItemsByMonth.Details
  fullName: Budget.Models.BudgetItemsByMonth.Details
- uid: System.Collections.Generic.List{Budget.Models.BudgetItem}
  commentId: T:System.Collections.Generic.List{Budget.Models.BudgetItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BudgetItem>
  nameWithType: List<BudgetItem>
  fullName: System.Collections.Generic.List<Budget.Models.BudgetItem>
  nameWithType.vb: List(Of BudgetItem)
  fullName.vb: System.Collections.Generic.List(Of Budget.Models.BudgetItem)
  name.vb: List(Of BudgetItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Budget.Models.BudgetItem
    name: BudgetItem
    nameWithType: BudgetItem
    fullName: Budget.Models.BudgetItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Budget.Models.BudgetItem
    name: BudgetItem
    nameWithType: BudgetItem
    fullName: Budget.Models.BudgetItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Budget.Models.BudgetItemsByMonth.Total*
  commentId: Overload:Budget.Models.BudgetItemsByMonth.Total
  name: Total
  nameWithType: BudgetItemsByMonth.Total
  fullName: Budget.Models.BudgetItemsByMonth.Total
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
