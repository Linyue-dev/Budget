### YamlMime:ManagedReference
items:
- uid: Budget.Utils.BudgetFiles
  commentId: T:Budget.Utils.BudgetFiles
  id: BudgetFiles
  parent: Budget.Utils
  children:
  - Budget.Utils.BudgetFiles.VerifyReadFromFileName(System.String,System.String)
  - Budget.Utils.BudgetFiles.VerifyWriteToFileName(System.String,System.String)
  langs:
  - csharp
  - vb
  name: BudgetFiles
  nameWithType: BudgetFiles
  fullName: Budget.Utils.BudgetFiles
  type: Class
  source:
    remote:
      path: Budget/Utils/BudgetFiles.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: BudgetFiles
    path: Utils/BudgetFiles.cs
    startLine: 10
  assemblies:
  - Budget
  namespace: Budget.Utils
  syntax:
    content: public class BudgetFiles
    content.vb: Public Class BudgetFiles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Budget.Utils.BudgetFiles.VerifyReadFromFileName(System.String,System.String)
  commentId: M:Budget.Utils.BudgetFiles.VerifyReadFromFileName(System.String,System.String)
  id: VerifyReadFromFileName(System.String,System.String)
  parent: Budget.Utils.BudgetFiles
  langs:
  - csharp
  - vb
  name: VerifyReadFromFileName(String, String)
  nameWithType: BudgetFiles.VerifyReadFromFileName(String, String)
  fullName: Budget.Utils.BudgetFiles.VerifyReadFromFileName(System.String, System.String)
  type: Method
  source:
    remote:
      path: Budget/Utils/BudgetFiles.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: VerifyReadFromFileName
    path: Utils/BudgetFiles.cs
    startLine: 15
  assemblies:
  - Budget
  namespace: Budget.Utils
  syntax:
    content: public static string VerifyReadFromFileName(string FilePath, string DefaultFileName)
    parameters:
    - id: FilePath
      type: System.String
    - id: DefaultFileName
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function VerifyReadFromFileName(FilePath As String, DefaultFileName As String) As String
  overload: Budget.Utils.BudgetFiles.VerifyReadFromFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Budget.Utils.BudgetFiles.VerifyWriteToFileName(System.String,System.String)
  commentId: M:Budget.Utils.BudgetFiles.VerifyWriteToFileName(System.String,System.String)
  id: VerifyWriteToFileName(System.String,System.String)
  parent: Budget.Utils.BudgetFiles
  langs:
  - csharp
  - vb
  name: VerifyWriteToFileName(String, String)
  nameWithType: BudgetFiles.VerifyWriteToFileName(String, String)
  fullName: Budget.Utils.BudgetFiles.VerifyWriteToFileName(System.String, System.String)
  type: Method
  source:
    remote:
      path: Budget/Utils/BudgetFiles.cs
      branch: HomeBudget_using_db
      repo: https://github.com/linyueCS-IT/Budget.git
    id: VerifyWriteToFileName
    path: Utils/BudgetFiles.cs
    startLine: 33
  assemblies:
  - Budget
  namespace: Budget.Utils
  syntax:
    content: public static string VerifyWriteToFileName(string FilePath, string DefaultFileName)
    parameters:
    - id: FilePath
      type: System.String
    - id: DefaultFileName
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function VerifyWriteToFileName(FilePath As String, DefaultFileName As String) As String
  overload: Budget.Utils.BudgetFiles.VerifyWriteToFileName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Budget.Utils
  commentId: N:Budget.Utils
  name: Budget.Utils
  nameWithType: Budget.Utils
  fullName: Budget.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Budget.Utils.BudgetFiles.VerifyReadFromFileName*
  commentId: Overload:Budget.Utils.BudgetFiles.VerifyReadFromFileName
  name: VerifyReadFromFileName
  nameWithType: BudgetFiles.VerifyReadFromFileName
  fullName: Budget.Utils.BudgetFiles.VerifyReadFromFileName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Budget.Utils.BudgetFiles.VerifyWriteToFileName*
  commentId: Overload:Budget.Utils.BudgetFiles.VerifyWriteToFileName
  name: VerifyWriteToFileName
  nameWithType: BudgetFiles.VerifyWriteToFileName
  fullName: Budget.Utils.BudgetFiles.VerifyWriteToFileName
